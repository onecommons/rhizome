Rhizome is a simple content management and delivery system that is similar to a [Wiki|http://c2.com/cgi/wiki] except that you can author arbitrary XML content and RDF metadata, including the structure of the website. This allows both the content and structure to be easily repurposed and complex web applications rapidly developed. 

The key conceptual difference is this: a Wiki is a website whose pages correspond to WikiNames, which are local to the website. Rhizome has a notion similar to WikiNames but they are universal unique abstract entities that don't necessarily correspond to a webpage -- they can be a name for anything.  How they are displayed depends on the context, using the [Racoon] engine.

The long-term [vision|RhizomeStatus] is that each Rhizome site will intertwine together, forming an emergent fuzzy taxonomy over a peer-to-peer network.

!Features

Wiki ease

* All the functionality of a Wiki: public and automatic creation of pages and links using simple text formatting rules
* But the same [formatting rules|RhizML] can used to author arbitrary HTML, XML and RDF 
* And you can create and edit not just content but also the metadata, site structure and appearance, even application behavior
* Including dynamic pages: supports XSLT, [RxSLT], Python, [RxUpdate]
* Thus enabling dynamic, rule and context based presentation of content

Advanced Content Management functionality

* pages can consist of any content: xml, html, binary, etc.
* content, metadata and site structure is a stored as RDF: enabling it be repurposable, human editable, application agnostic, etc.
* flexible authorization and security model 
* staging/release workflow
* native versioning of content and metadata, conflict detection
* support for external resources that can be modified without cooperation
* can generate static websites
* import/export of content and metadata
* flexible backend: supports multiple RDF engines (Redland, 4Suite) with multiple datastores: file based, SQL databases, embeddable databases (Sleepycat, Metakit)

!Easy authoring and Rapid Development
XHTML or arbitrary XML can be authored in [RhizML] in manner very similar to Wiki text formatting rules.  Rhizome comes with built-in support for [Apache Forrest|http://xml.apache.org/forrest/index.html] document types and has preliminary support for [DocBook|http://www.docbook.org].  You can also easily view and edit RDF metadata for the site using [RxML].

Almost all of Rhizome's functionality can be found its dynamic pages, which are written in [RxSLT], XSLT, [RxUpdate] and a few Python pages.  These can be edited like any other page, making it easy to add and change functionality without restarting server.  You can use RxUpdate to migrate the underlying schema at run-time.  Rhizome supports fine-grained authorization and versioning of both metadata and content, so you have some guard rails too.

!Documentation and Configuration
See the [Rhizome Manual|RhizomeDoc] for general documentation.

For more technical details see ^^rhizome/rhizome-config.py^^ -- the core behavior of Rhizome is defined in there and the comments should be useful to read. Also, see the pages on [Racoon].

!Status
Rhizome's young but it can run small-scale websites (such as the this [one|about]).  It's fairly ugly and missing some significant functionality that you may or may not miss. See [RhizomeStatus] for more details.