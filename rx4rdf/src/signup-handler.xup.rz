 xu:modifications(version="1.0" xmlns:xu="http://www.xmldb.org/xupdate", 
    xmlns:a="http://rx4rdf.sf.net/ns/archive#",
    xmlns:wiki="http://rx4rdf.sf.net/ns/wiki#",
    xmlns:auth="http://rx4rdf.sf.net/ns/auth#",
    xmlns:wf="http://rx4rdf.sf.net/ns/racoon/xpath-ext#",
    xmlns:f='http://xmlns.4suite.org/ext', 
    xmlns:rdfs='http://www.w3.org/2000/01/rdf-schema#',
    xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#')
  
  ; validate fields
  xu:if test="not($loginname)"
     xu:message terminate='yes' text="login name must be specified"  

  xu:if test="$password != $confirm-password"
   xu:message terminate='yes' text="password must match"
   
  ; if we're a creating a new user check for duplicates
  xu:if test="$action='creation' and /wiki:User[wiki:login-name=$loginname]":
    xu:message terminate='yes' text='name already taken: please choose new login name'

  xu:if test="$action='creation'": 
   ; new user     
   xu:append select='/':
     ; add access tokens for private ownership
     auth:AccessToken rdf:about='{$BASE_MODEL_URI}users/{$loginname}/private-rw'
      rdfs:label: `Private
      auth:has-permission rdf:resource='http://rx4rdf.sf.net/ns/wiki#action-view'
      auth:has-permission rdf:resource='http://rx4rdf.sf.net/ns/wiki#action-view-metadata'
      auth:has-permission rdf:resource='http://rx4rdf.sf.net/ns/wiki#action-edit-metadata'
      auth:has-permission rdf:resource='http://rx4rdf.sf.net/ns/wiki#action-edit'            
      auth:has-permission rdf:resource='http://rx4rdf.sf.net/ns/wiki#action-showrevisions'                  
      auth:has-permission rdf:resource='http://rx4rdf.sf.net/ns/wiki#action-save'
      auth:has-permission rdf:resource='http://rx4rdf.sf.net/ns/wiki#action-save-metadata'
      auth:has-permission rdf:resource='http://rx4rdf.sf.net/ns/wiki#action-confirm-delete'
      auth:has-permission rdf:resource='http://rx4rdf.sf.net/ns/wiki#action-delete'
      auth:has-permission rdf:resource="http://rx4rdf.sf.net/ns/auth#permission-remove-statement"
      auth:has-permission rdf:resource="http://rx4rdf.sf.net/ns/auth#permission-add-statement"
      auth:priority: 1
      
     auth:AccessToken rdf:about='{$BASE_MODEL_URI}users/{$loginname}/private-w'
      rdfs:label: `Private Write/Public Read
      auth:has-permission rdf:resource='http://rx4rdf.sf.net/ns/wiki#action-confirm-delete'
      auth:has-permission rdf:resource='http://rx4rdf.sf.net/ns/wiki#action-delete'
      auth:has-permission rdf:resource='http://rx4rdf.sf.net/ns/wiki#action-edit'
      auth:has-permission rdf:resource='http://rx4rdf.sf.net/ns/wiki#action-save'
      auth:has-permission rdf:resource='http://rx4rdf.sf.net/ns/wiki#action-save-metadata'      
      auth:has-permission rdf:resource="http://rx4rdf.sf.net/ns/auth#permission-remove-statement"
      auth:has-permission rdf:resource="http://rx4rdf.sf.net/ns/auth#permission-add-statement"
      auth:priority: 1

     ; adding group access-tokens enables us to easily allow access to only those that are a member of one of the groups the user is a member of:
     ; when the user joins a group, add her group access tokens to the group's corresponding role       
     auth:AccessToken rdf:about='{$BASE_MODEL_URI}users/{$loginname}/group-rw'    
      rdfs:label: `Group
      auth:has-permission rdf:resource='http://rx4rdf.sf.net/ns/wiki#action-view'
      auth:has-permission rdf:resource='http://rx4rdf.sf.net/ns/wiki#action-view-metadata'
      auth:has-permission rdf:resource='http://rx4rdf.sf.net/ns/wiki#action-edit-metadata'
      auth:has-permission rdf:resource='http://rx4rdf.sf.net/ns/wiki#action-edit'            
      auth:has-permission rdf:resource='http://rx4rdf.sf.net/ns/wiki#action-showrevisions'             
      auth:has-permission rdf:resource='http://rx4rdf.sf.net/ns/wiki#action-save'
      auth:has-permission rdf:resource='http://rx4rdf.sf.net/ns/wiki#action-save-metadata'
      auth:has-permission rdf:resource='http://rx4rdf.sf.net/ns/wiki#action-confirm-delete'
      auth:has-permission rdf:resource='http://rx4rdf.sf.net/ns/wiki#action-delete'        
      auth:has-permission rdf:resource="http://rx4rdf.sf.net/ns/auth#permission-remove-statement"
      auth:has-permission rdf:resource="http://rx4rdf.sf.net/ns/auth#permission-add-statement"
      auth:priority: 1
            
     auth:AccessToken rdf:about='{$BASE_MODEL_URI}users/{$loginname}/group-w'
      rdfs:label: `Group Write/Public Read
      auth:has-permission rdf:resource='http://rx4rdf.sf.net/ns/wiki#action-confirm-delete'
      auth:has-permission rdf:resource='http://rx4rdf.sf.net/ns/wiki#action-delete'
      auth:has-permission rdf:resource='http://rx4rdf.sf.net/ns/wiki#action-edit'           
      auth:has-permission rdf:resource='http://rx4rdf.sf.net/ns/wiki#action-save'
      auth:has-permission rdf:resource='http://rx4rdf.sf.net/ns/wiki#action-save-metadata'
      auth:has-permission rdf:resource="http://rx4rdf.sf.net/ns/auth#permission-remove-statement"
      auth:has-permission rdf:resource="http://rx4rdf.sf.net/ns/auth#permission-add-statement"
      auth:priority: 1
      
     wiki:User rdf:about='{$BASE_MODEL_URI}users/{$loginname}'
        wiki:login-name: xu:value-of select="$loginname"
        wiki:name: xu:value-of select="concat('users/',$loginname)"
        auth:has-rights-to rdf:resource='{$BASE_MODEL_URI}users/{$loginname}/private-rw'
        auth:has-rights-to rdf:resource='{$BASE_MODEL_URI}users/{$loginname}/private-w'
        auth:has-rights-to rdf:resource='{$BASE_MODEL_URI}users/{$loginname}/group-rw' 
        auth:has-rights-to rdf:resource='{$BASE_MODEL_URI}users/{$loginname}/group-w'
        xu:element name='{name-from-uri($__passwordHashProperty)}' namespace='{namespace-uri-from-uri($__passwordHashProperty)}': 
           xu:value-of select="wf:secure-hash($password)"
        wiki:fullname: xu:value-of select="$fullname"
        wiki:email: xu:value-of select="$email"
        auth:guarded-by rdf:resource='{$BASE_MODEL_URI}users/{$loginname}/private-rw'
  
  xu:if test="not($action='creation')":  
      ;editing existing user, update values   
      xu:variable name='user' select='/wiki:User[wiki:login-name=$loginname]'
      ;if the password is not equal to hash of the current password, set it
      xu:variable name='passwordHash' select="$user/*[uri(.)=$__passwordHashProperty]"
      xu:if test="not($passwordHash) or $password != $passwordHash"
        xu:replace select='$passwordHash'
         xu:element name='{name-from-uri($__passwordHashProperty)}' namespace='{namespace-uri-from-uri($__passwordHashProperty)}':
           xu:value-of select="wf:secure-hash($password)"
      xu:replace select='$user/wiki:fullname'
       wiki:fullname: xu:value-of select="$fullname"
      xu:replace select='$user/wiki:email'
       wiki:email: xu:value-of select="$email"
  
  ;just for side-effect
  xu:if test="wf:assign-metadata('itemname', concat('users/',$loginname))"